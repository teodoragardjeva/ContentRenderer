{"version":3,"sources":["services/webService.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAAyB,eAAe,CAAC,CAAA;AAEzC,0BAA6B,oBAAoB,CAAC,CAAA;AAGlD;IACI,OAAO,CAAC,GAAW;QACf,MAAM,CAAC,IAAI,OAAO,CACd,UAAU,OAAO,EAAE,MAAM;YACrB,MAAM,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;YACrC,OAAO,CAAC,MAAM,GAAG;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACtB,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACvC,UAAU;oBACV,OAAO,CAAC,MAAM,CAAC,CAAC;gBACpB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,kCAAkC;oBAClC,MAAM,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACvC,CAAC;YACL,CAAC,CAAC;YACF,OAAO,CAAC,OAAO,GAAG;gBACd,MAAM,CAAC,IAAI,KAAK,CACZ,wBAAwB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACrD,CAAC,CAAC;YACF,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACzB,gEAAgE;YAChE,+DAA+D;YAC/D,+DAA+D;YAC/D,OAAO,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACX,CAAC;IAED,WAAW,CAAC,IAAY;QACpB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,wBAAc,CAAC,UAAU,GAAG,6BAA6B,GAAE,IAAI,CAAC,CAAC;IACzF,CAAC;IAED,YAAY;QACR,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,wBAAc,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC;IAChE,CAAC;IAED,QAAQ;QACJ,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;IACjD,CAAC;AAEL,CAAC;AAxCD;IAAC,iBAAU,EAAE;;cAAA;AACA,kBAAU,aAuCtB,CAAA","file":"services/webService.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {MenuListItem} from '../models/menuListItem';\r\nimport {Configurations} from '../helpers/globals';\r\n\r\n@Injectable()\r\nexport class WebService {\r\n    getData(url: string) {\r\n        return new Promise(\r\n            function (resolve, reject) {\r\n                const request = new XMLHttpRequest();\r\n                request.onload = function () {\r\n                    if (this.status === 200) {\r\n                        var result = JSON.parse(this.response);\r\n                        // Success\r\n                        resolve(result);\r\n                    } else {\r\n                        // Something went wrong (404 etc.)\r\n                        reject(new Error(this.statusText));\r\n                    }\r\n                };\r\n                request.onerror = function () {\r\n                    reject(new Error(\r\n                        'XMLHttpRequest Error: ' + this.statusText));\r\n                };\r\n                request.open('GET', url);\r\n                //request.setRequestHeader('Access-Control-Allow-Headers', '*');\r\n                //request.setRequestHeader('Content-Type', 'application/json');\r\n                //request.setRequestHeader('Access-Control-Allow-Origin', '*');\r\n                request.send();\r\n            });\r\n    }\r\n\r\n    getGridItem(type: number) {\r\n        return this.getData(Configurations.serviceUrl + 'elements/GetGridItems?type='+ type);\r\n    }\r\n\r\n    getMenuItems() {\r\n        return this.getData(Configurations.serviceUrl + 'elements');\r\n    }\r\n\r\n    getUsers() {\r\n        return this.getData('../../data/users.json');\r\n    }\r\n\r\n}"],"sourceRoot":"/source/"}